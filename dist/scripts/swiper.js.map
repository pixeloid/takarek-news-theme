{"version":3,"sources":["../bower_components/swiper/dist/js/swiper.js"],"names":["global","factory","exports","module","define","amd","Swiper","this","$","selector","context","arr","i","Dom7","els","tempParent","html","trim","indexOf","toCreate","doc","createElement","innerHTML","childNodes","length","push","match","querySelectorAll","getElementById","split","nodeType","win","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","setAttribute","attrName","getAttribute","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","style","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","targetSelector","listener","apply","parents","k","handleEvent","assign","args","len","eventType","capture","undefined","events","event$1","dom7LiveListeners","proxyListener","addEventListener","event","dom7Listeners","off","handlers","handler","removeEventListener","splice","trigger","evt","CustomEvent","detail","bubbles","cancelable","createEvent","initEvent","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","call","dom","outerWidth","includeMargins","styles","offsetWidth","parseFloat","getPropertyValue","outerHeight","offsetHeight","offset","box","getBoundingClientRect","body","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","getComputedStyle","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","children","removeChild","toAdd","updateSize","width","height","swiper","$el","params","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","Utils","extend","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","replace","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","Support","flexbox","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","centerInsufficientSlides","allSlidesSize","forEach","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","loop","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","axis","virtualTranslate","currentTranslate","setTranslate","byController","x","y","transforms3d","previousTranslate","newProgress","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","map","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","nextTick","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged$1","loopDestroy","setGrabCursor","moving","touch","simulateTouch","isLocked","cursor","unsetGrabCursor","appendSlide","observer","update","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","screen","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","now","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","activeElement","blur","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","pow","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","grabCursor","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","clearTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","bind","touchEventsTarget","pointerEvents","prefixedPointerEvents","passiveListener","start","passiveListeners","passive","move","end","Device","ios","android","detachEvents","Object","keys","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","param","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","a","b","breakpointsInverse","innerWidth","addClasses","classNames","suffixes","Browser","isIE","isEdge","suffix","containerModifierClass","join","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","image","complete","Image","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","wasLocked","navigation","isEventSupported","isSupported","element","implementation","hasFeature","document","nodeName","querySelector","getElementsByTagName","location","hash","window","navigator","userAgent","history","Date","setTimeout","self","fn","prototype","Class","Methods","methodName","deleteProps","obj","object","delay","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","enumerable","testDiv","Modernizr","DocumentTouch","pointerEnabled","PointerEvent","msPointerEnabled","csstransforms3d","supportsPassive","opts","defineProperty","get","gestures","SwiperClass","eventsListeners","eventName","staticAccessors","components","configurable","priority","method","onceHandler","eventHandler","Array","isArray","slice","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","create","set","use","installModule","name","proto","static","install","m","concat","defineProperties","transition$1","manipulation","ua","device","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","isSafari","isUiWebView","test","images","checkOverflow$1","defaults","init","uniqueNavElements","noSwipingClass","slideClass","slideBlankClass","wrapperClass","runCallbacksOnInit","prototypes","extendedDefaults","SwiperClass$$1","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","__proto__","spv","breakLoop","translateValue","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","disconnect","Observer$1","Virtual","force","onRendered","lazy","load","ref","ref$1","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","nextEl","prevEl","Navigation$1","hideOnClick","hiddenClass","toEdge","fromEdge","click","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","bulletElement","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","clientX","clientY","positionRatio","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Scrollbar$1","dragClass","Parallax","setTransform","p","currentOpacity","currentScale","parallax","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Zoom$1","containerClass","zoomedSlideClass","touchStart","touchEnd","doubleTap","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","preloaderClass","scroll","scrollbarDragMove","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","getInterpolateFunction","c","controller","spline","setTranslate$1","setControlledTranslate","by","controlledTranslate","multiplier","inverse","controlled","control","setControlledTransition","Controller$1","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","A11y","notificationClass","paginationUpdate","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","slideHistory","History$1","HashNavigation","onHashCange","newHash","setHash","slideHash","watchState","HashNavigation$1","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","Autoplay$1","disableOnInteraction","beforeTransitionStart","sliderFirstMove","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","EffectCoverflow","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","slideChange","beforeDestroy"],"mappings":"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","file":"swiper.js","sourcesContent":["/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.2\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: September 13, 2018\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n              + parseFloat(slideStyles.getPropertyValue('margin-left'))\n              + parseFloat(slideStyles.getPropertyValue('margin-right'));\n          } else {\n            slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n              + parseFloat(slideStyles.getPropertyValue('margin-top'))\n              + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (swiper.params.breakpointsInverse) {\n        if (point <= win.innerWidth) {\n          breakpoint = point;\n        }\n      } else if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass$$1) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass$$1.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;\n    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update$$1 () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass$$1;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: false });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.push(slide);\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slide) {\n      var swiper = this;\n      swiper.virtual.slides.unshift(slide);\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[cachedIndex + 1] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideNext(0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }\n          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbarHide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        swiper.zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n"],"sourceRoot":"assets/scripts/"}